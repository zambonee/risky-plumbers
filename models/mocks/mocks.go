// Code generated by MockGen. DO NOT EDIT.
// Source: arcticwolf.com/cutler/models (interfaces: DAOInterface)

// Package mock_models is a generated GoMock package.
package mock_models

import (
        context "context"
        reflect "reflect"

        models "arcticwolf.com/cutler/models"
        gomock "github.com/golang/mock/gomock"
)

// MockDAOInterface is a mock of DAOInterface interface.
type MockDAOInterface struct {
        ctrl     *gomock.Controller
        recorder *MockDAOInterfaceMockRecorder
}

// MockDAOInterfaceMockRecorder is the mock recorder for MockDAOInterface.
type MockDAOInterfaceMockRecorder struct {
        mock *MockDAOInterface
}

// NewMockDAOInterface creates a new mock instance.
func NewMockDAOInterface(ctrl *gomock.Controller) *MockDAOInterface {
        mock := &MockDAOInterface{ctrl: ctrl}
        mock.recorder = &MockDAOInterfaceMockRecorder{mock}
        return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDAOInterface) EXPECT() *MockDAOInterfaceMockRecorder {
        return m.recorder
}

// GetAllRisks mocks base method.
func (m *MockDAOInterface) GetAllRisks(arg0 context.Context) []models.Risk {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "GetAllRisks", arg0)
        ret0, _ := ret[0].([]models.Risk)
        return ret0
}

// GetAllRisks indicates an expected call of GetAllRisks.
func (mr *MockDAOInterfaceMockRecorder) GetAllRisks(arg0 interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllRisks", reflect.TypeOf((*MockDAOInterface)(nil).GetAllRisks), arg0)
}

// GetRiskByID mocks base method.
func (m *MockDAOInterface) GetRiskByID(arg0 context.Context, arg1 string) (*models.Risk, error) {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "GetRiskByID", arg0, arg1)
        ret0, _ := ret[0].(*models.Risk)
        ret1, _ := ret[1].(error)
        return ret0, ret1
}

// GetRiskByID indicates an expected call of GetRiskByID.
func (mr *MockDAOInterfaceMockRecorder) GetRiskByID(arg0, arg1 interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRiskByID", reflect.TypeOf((*MockDAOInterface)(nil).GetRiskByID), arg0, arg1)
}

// SaveRisk mocks base method.
func (m *MockDAOInterface) SaveRisk(arg0 context.Context, arg1 models.RiskState, arg2, arg3 string) (*models.Risk, error) {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "SaveRisk", arg0, arg1, arg2, arg3)
        ret0, _ := ret[0].(*models.Risk)
        ret1, _ := ret[1].(error)
        return ret0, ret1
}

// SaveRisk indicates an expected call of SaveRisk.
func (mr *MockDAOInterfaceMockRecorder) SaveRisk(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveRisk", reflect.TypeOf((*MockDAOInterface)(nil).SaveRisk), arg0, arg1, arg2, arg3)
}